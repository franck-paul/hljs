"use strict";dotclear.ready((()=>{const e=dotclear.getData("hljs_editor",!1);jsToolBar.prototype.elements.hljsSpace={type:"space",format:{wysiwyg:!0,wiki:!0,xhtml:!0,markdown:!0}},jsToolBar.prototype.elements.hljs={type:"button",title:"Highlighted Code",context:"post",icon:e.icon,shortkey:"KeyJ",shortkey_name:"J",fn:{},fncall:{},open_url:e.open_url,data:{},popup(){window.the_toolbar=this,this.elements.hljs.data={},window.open(this.elements.hljs.open_url,"dc_popup","alwaysRaised=yes,dependent=yes,toolbar=yes,height=240,width=480,menubar=no,resizable=yes,scrollbars=yes,status=no")}},jsToolBar.prototype.elements.hljs.title=e.title,jsToolBar.prototype.elements.hljs.fn.wiki=function(){this.elements.hljs.popup.call(this)},jsToolBar.prototype.elements.hljs.fn.xhtml=function(){this.elements.hljs.popup.call(this)},jsToolBar.prototype.elements.hljs.fn.markdown=function(){this.elements.hljs.popup.call(this)},jsToolBar.prototype.elements.hljs.fncall.wiki=function(){const e=`\n///hljs ${this.elements.hljs.data.syntax}\n`;this.encloseSelection(e,"\n///\n")},jsToolBar.prototype.elements.hljs.fncall.xhtml=function(){const e=`<pre><code class="language-${this.elements.hljs.data.syntax}">\n`;this.encloseSelection(e,"\n</code></pre>\n")},jsToolBar.prototype.elements.hljs.fncall.markdown=function(){const e=`\`\`\`language-${this.elements.hljs.data.syntax}\n`;this.encloseSelection(e,"\n```\n")}}));
